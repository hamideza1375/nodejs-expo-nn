<div style="display: flex; justify-content: flex-end; height: 100%; ">

  <form onsubmit="submited(event)"
    style="width:250px;margin: 3px 2px 0 0; display:flex;flex-direction: row-reverse; position: absolute; align-items: flex-end; ">
    <input onchange="serchInput(event.target.value)" type="text" placeholder="search"
      style="text-align: right;border-radius: 1px;border: 1px solid rgb(150, 146, 146);display:block;flex-grow: 1;height: 30.5px;position:relative;z-index:1000" />
    <i onclick="sendIcon()" class="fa fa-search"
      style="border-radius: 1px;padding: 5px 5px 0px;border: 1px solid rgb(150, 146, 146); background-color: #fff;font-size: 19px;display:block;height: 30px;width: 30px;position:relative;z-index:1000"></i>
  </form>

  <div id="map" style="width:100%; height: 100vh;display:flex;">
    <!-- <div id="bottomDiv"
      style="display:flex;align-self: flex-end;margin: 0 auto;position: absolute;z-index: 10000000;height: 70px;width: 100%;background-color: #fff;">
      <big id="textLocation" style="width:100%;padding:14px 6px;text-align: right;"></big>
    </div> -->
    <div>

      <script src="/js/leaflet.js"></script>
      <script>

        function submited(event) {
          event.preventDefault()
          sendIcon()
        }
        let show = true
        let search

        function serchInput(text) { search = text }

        let mark = { lat: 36.224174234928924, lng: 57.69491965736432 }
        let option = { center: mark, zoom: 16, }
        var myIcon = L.icon({ iconUrl: '/images/mark.png', iconSize: [38, 95], iconAnchor: [22, 94], popupAnchor: [-3, -76], shadowSize: [68, 95], shadowAnchor: [22, 94], });
        let markerOption = { draggable: true, icon: myIcon }

        var map = L.map('map', option)
        map.on('click', (ev) => {
          show = !show
          show ? marker.openPopup() : marker.closePopup()
        })


        window.addEventListener('load', async (ev) => {
          const response = await fetch('http://localhost/reverse', { method: 'post', body: JSON.stringify(mark), headers: { 'Content-Type': 'application/json' } })
          if (response.status) {
            const data = await response.json()
            if (data[0]) {
              const one = (data[0].streetName && data[0].streetName !== data[0].formattedAddress.split(",")[0]) ? data[0].streetName : ''
              const two = data[0].formattedAddress.split(",")[0] ? data[0].formattedAddress.split(",")[0] : ''
              const three = data[0].formattedAddress.split(",")[1] ? data[0].formattedAddress.split(",")[1] : ''
              const street = one + ' ' + two + ' ' + three
              marker.bindPopup(street).openPopup()
            }
          }
        })




        var layer = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');
        map.addLayer(layer);



        let marker = L.marker(mark, markerOption).addTo(map)


        marker.on('dragend', async (ev) => {
          map.setView({ lat: ev.target._latlng.lat, lng: ev.target._latlng.lng })
          const response = await fetch('http://localhost/reverse', { method: 'post', body: JSON.stringify({ lat: ev.target._latlng.lat, lng: ev.target._latlng.lng }), headers: { 'Content-Type': 'application/json' } })
          if (response.status) {
            const data = await response.json()
            if (data[0]) {
              const one = (data[0].streetName && data[0].streetName !== data[0].formattedAddress.split(",")[0]) ? data[0].streetName : ''
              const two = data[0].formattedAddress.split(",")[0] ? data[0].formattedAddress.split(",")[0] : ''
              const three = data[0].formattedAddress.split(",")[1] ? data[0].formattedAddress.split(",")[1] : ''
              const street = one + ' ' + two + ' ' + three
              marker.bindPopup(street).openPopup()
            }
          }
        });



        async function sendIcon(data) {
          const response = await fetch('http://localhost/geocode', { method: 'post', body: JSON.stringify({ loc: ` سبزوار ${search} ` }), headers: { 'Content-Type': 'application/json' } })
          if (response.status) {
            const data = await response.json()
            if (data[0]) {
              const one = (data[0].streetName && data[0].streetName !== data[0].formattedAddress.split(",")[0]) ? data[0].streetName : ''
              const two = data[0].formattedAddress.split(",")[0] ? data[0].formattedAddress.split(",")[0] : ''
              const three = data[0].formattedAddress.split(",")[1] ? data[0].formattedAddress.split(",")[1] : ''
              const street = one + ' ' + two + ' ' + three
              map.setView({ lat: data[0].latitude, lng: data[0].longitude });
              marker.setLatLng({ lat: data[0].latitude, lng: data[0].longitude })
              marker.bindPopup(street.trim() ? street : '!پیدا نشد').openPopup()
              search = ''
            }
            else marker.bindPopup('!پیدا نشد ').openPopup()
          }
        }



      </script>

    </div>